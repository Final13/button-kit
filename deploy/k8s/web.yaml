apiVersion: v1
kind: Namespace
metadata:
  name: kit
---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}
spec:
  ports:
    - name: api
      port: 8080
      targetPort: api
  selector:
    app: ${APP_NAME}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ${APP_NAME}
  # namespace: kit
  labels:
    app: ${APP_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${APP_NAME}
  template:
    metadata:
      labels:
        app: ${APP_NAME}
    spec:
      imagePullSecrets:
        - name: registry-kit
      volumes:
        - name: env
          secret:
            secretName: ${ENV_SECRET_NAME}
      containers:
        - name: app
          image: ${DOCKER_IMAGE}
          volumeMounts:
            - name: env
              readOnly: true
              mountPath: "/app/.env.js"
              subPath: "env_js"
            - name: env
              readOnly: true
              mountPath: "/app/.env"
              subPath: "env_file"
          ports:
            - name: api
              containerPort: 8080
          env:
            - name: STAGE
              value: ${STAGE}
            - name: PORT
              value: "8080"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${APP_NAME}-ingress
spec:
  rules:
  - host: "kit.lskjs.ru"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ${APP_NAME}
            port:
              name: api
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
 name: isuvorov-issuer
spec:
 acme:
   email: devops@isuvorov.com
   server: https://acme-v02.api.letsencrypt.org/directory
   privateKeySecretRef:
     name: example-issuer-account-key
   solvers:
     - http01:
         # The ingressClass used to create the necessary ingress routes
         ingress:
           class: traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: ${APP_NAME}-ingress2
 annotations:
   cert-manager.io/issuer: isuvorov-issuer
spec:
 tls:
   - hosts:
       - lskjs.ru
     secretName: tls-whoami-ingress-http
 rules:
   - host: lskjs.ru
     http:
       paths:
         - path: /
           pathType: Prefix
           backend:
             service:
               name: ${APP_NAME}
               port:
                 name: api
